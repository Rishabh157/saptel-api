const { ObjectId } = require("mongodb");
const mongoose = require("mongoose");
const { genderType } = require("../helper/enumUtils");
const InboundSchema = new mongoose.Schema(
  {
    didNo: { type: String, required: true, trim: true },
    inOutBound: { type: String, required: false, default: "" },
    incomingCallerNo: {
      type: String,
      required: false,
      default: "",
    },
    mobileNo: { type: String, required: true, trim: true },
    deliveryCharges: { type: Number, required: false, default: 0 },
    discount: { type: Number, required: false, default: 0 },
    total: { type: Number, required: false, default: 0 },
    country: { type: ObjectId, required: true, trim: true },
    state: { type: ObjectId, required: true, trim: true },
    district: { type: ObjectId, required: true, trim: true },
    tehsil: { type: ObjectId, required: true, trim: true },
    pincode: { type: ObjectId, required: true, trim: true },
    area: { type: ObjectId, required: true, trim: true },
    expectedDeliveryDate: {
      type: String,
      required: false,
      default: "",
    },
    profileDeliveredBy: {
      type: String,
      required: false,
      default: "",
    },
    complaintDetails: {
      type: String,
      required: false,
      default: "",
    },
    complaintNo: { type: String, required: false, default: "" },
    agentName: { type: String, required: false, default: "" },
    name: { type: String, required: false, default: "" },
    age: { type: Number, required: false, default: 0 },
    address: { type: String, required: false, default: "" },
    realtion: { type: String, required: true, trim: true },
    agentDistrict: { type: ObjectId, required: true, trim: true },
    landmark: { type: String, required: true, trim: true },
    alternateNo1: {
      type: String,
      required: false,
      default: "",
    },
    watsappNo: { type: String, required: false, default: "" },
    gender: {
      type: String,
      enum: [genderType.male, genderType.female, genderType.other],
      required: true,
      trim: true,
    },
    prepaid: { type: Boolean, required: true, default: false },
    emailId: { type: String, required: false, default: "" },
    channel: { type: ObjectId, required: true, trim: true },
    remark: { type: String, required: false, default: "", lowercase: true },
    dispositionLevelOne: {
      type: ObjectId,
      required: true,
      trim: true,
    },
    dispositionLevelTwo: {
      type: ObjectId,
      required: true,
      trim: true,
    },
    isDeleted: {
      type: Boolean,
      default: false,
    },
    isActive: {
      type: Boolean,
      default: true,
    },
  },
  {
    timestamps: true,
  }
);

const searchKeys = [
  "didNo",
  "inOutBound",
  "incomingCallerNo",
  "mobileNo",
  "deliveryCharges",
  "discount",
  "total",
  "country",
  "state",
  "district",
  "tehsil",
  "pincode",
  "area",
  "expectedDeliveryDate",
  "profileDeliveredBy",
  "complaintDetails",
  "complaintNo",
  "agentName",
  "name",
  "age",
  "address",
  "realtion",
  "agentDistrict",
  "landmark",
  "alternateNo1",
  "watsappNo",
  "gender",
  "prepaid",
  "emailId",
  "channel",
  "remark",
  "dispositionLevelOne",
  "dispositionLevelTwo",
];
module.exports = mongoose.model("Inbound", InboundSchema);
module.exports.searchKeys = [...searchKeys];
